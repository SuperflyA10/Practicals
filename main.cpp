// Aluwani Nesengani
// Student NO: 220162015
// CSC1A Practical 3

#include <iostream>
#include <vector>

//// The following logic was generated using ChatGPT via the prompt: “Provide C++ code for a function that outputs a Fibonacci sequence of n terms, where n is provided as a parameter to the function(using vectors)n."
std::vector<int> generateFibonacci(int n) // vector return function to generate and return a Fibonacci sequence of n terms.
{
    std::vector<int> fibonacci;

    // Storing the first and second term of the fibonacci sequence into the fibonacci vector.
    fibonacci.push_back(0); // first term number
    fibonacci.push_back(1); // Second Fibonacci number

    // for loop to loop for n times from the third term(n=3)
    for (int i = 2; i < n; ++i)
    {
        // calculating and storing the next term by adding two previous terms in the sequence.
        int next = fibonacci[i - 1] + fibonacci[i - 2];
        fibonacci.push_back(next);
    }

    return fibonacci; // Return the Fibonacci vector.
}

//// The following logic was generated using ChatGPT via the prompt: “Provide C++ code for a function that outputs a Fibonacci sum of n terms, where n is provided as a parameter to the function”
int fibonacciSum(int n) // int return function that returns the sum of Fibonacci sequence for n terms.
{
    // storing all the fibonacci term generated by the fibonacci function and summing the together,
    std::vector<int> fibonacci = generateFibonacci(n);
    int sum = 0;
    int i = 0;

    // While loop to add all the fibonacci terms in the vector.
    while (i < n) // keep execute while i is less than n
    {
        sum += fibonacci[i];
        i++;
    }

    return sum; // Return the results of the Sum.
}

//// The following logic was generated using ChatGPT via the prompt: “Provide Palindrome for a string given by a user.”
std::string createPalindrome(const std::string &str) // String return function to take in a string and return its Palindrome.
{
    std::string palindrome = str;
    int i = (str.length() - 2);

    // Using a do while loop to append the reverse of the string (excluding the first character) to make a palindrome.
    do
    {
        palindrome += str[i];
        i--;

    } while (i >= 0);

    return palindrome;
}

using namespace std;
int main()
{
    char Select;
    cout << "Enter A,B or C to select an option: " << endl;
    cin >> Select;

    string Temp;

    switch (Select)
    {
    case 'A':
        int num;
        cout << "Enter Number of terms(n): " << endl;
        cin >> num;

        if (cin.fail() || num <= 0)
            cout << "Invalid number of terms" << endl;
        else
        {

            // calling the fibonacci function to generate  and display Fibonacci Series upto n(n given by the User)
            vector<int> Res;
            Res = generateFibonacci(num);

            cout << "The fibonacci sequence of " << num << " terms is: " << endl;
            for (int num : Res) // using the for each loop to output the fibonacci sequence
            {
                cout << num << " ";
            }
        }
        break;

    case 'B':
        int num1;
        cout << "Enter Number of terms(n): " << endl;
        cin >> num1;

        if (cin.fail() || num1 <= 0)
            cout << "Invalid number of terms" << endl;
        else
        {
            cout << "The fibonacci sum of " << num1 << " terms is: ";
            // calling the fibonacci sum function to generate and display Fibonacci sum for n terms.
            int Fibonacci_Sum = fibonacciSum(num1);
            cout << Fibonacci_Sum << endl;
        }
        break;

    case 'C':
        cout << "Enter a word: " << endl;
        cin >> Temp;
        if (cin.fail())
            cout << "Invalid" << endl;
        else
        {
            // Palindrome^2
            cout << "Palindrome of " << Temp << " is: ";
            // Calling the create palindrome function to generate and display the palindrome of user inputted string.
            cout << createPalindrome(Temp);
        }
        break;

    case 'X':
        break;

    default: // default to output error message for entering the inncorrect option
        cout << "Error! User entered invalid option" << endl;
        break;
    }
}
